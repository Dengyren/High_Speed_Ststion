
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>模拟汽车通行数据</title>
    @*1、Jquery组件引用*@
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    @*2、bootstrap组件引用*@
    <script src="~/Content/bootstrap.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    @*3、bootstrap table组件以及中文包的引用*@
    <script src="~/Content/bootstrap-table.min.js"></script>
    <link href="~/Content/bootstrap-table.css" rel="stylesheet" />
    <script src="~/Content/bootstrap-table-zh-CN.js"></script>
    <link href="~/css/submit.css" rel="stylesheet" />
    @*4、页面Js文件的引用*@

</head>
<body>
    <div>
        <table id="tb_departments"></table>
        <div id="toolbar" class="btn-group">
            <button id="btn_add" type="button" class="btn btn-default">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>批量模拟一
            </button>
            <button id="btn_edit" type="button" class="btn btn-default">
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>个体动态模拟
            </button>
        </div>
    </div>
    <div style="margin: 0 auto;width: 200px;">
        <input name="BtnSubmit"class="submitcss" type="submit" value="模拟类型1" />
        <input name="BtnSubmit"class="submitcss" type="submit" value="模拟类型2" />
        
    </div>
</body>
</html>

<script>
    $(function () {

        //1.初始化Table
        var oTable = new TableInit();
        oTable.Init();

        //2.初始化Button的点击事件
        var oButtonInit = new ButtonInit();
        oButtonInit.Init();

    });


    var TableInit = function () {
        var oTableInit = new Object();
        //初始化Table
        oTableInit.Init = function () {
            $('#tb_departments').bootstrapTable({
                url: '/Index/GetDepartment',         //请求后台的URL（*）
                method: 'get',                      //请求方式（*）
                toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: false,                     //是否启用排序
                sortOrder: "desc",                   //排序方式
                queryParams: oTableInit.queryParams,//传递参数（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: false,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                uniqueId: "ID",                     //每一行的唯一标识，一般为主键列
                showToggle: false,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: false,                   //是否显示父子表
                columns: [{
                    checkbox: true
                }, {
                        field: '车牌号码',
                    title: '车牌号码'
                }, {
                        field: '进站时间',
                    title: '进站时间'
                }, {
                        field: '出站时间',
                    title: '出站时间'
                }, {
                        field: '进站点',
                    title: '进站点'
                    }, {
                        field: '出站点',
                        title: '出站点'
                    }, {
                        field: '扣费金额',
                        title: '扣费金额'
                    }]
            });
        };

        //得到查询的参数
        oTableInit.queryParams = function (params) {
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit,   //页面大小
                offset: params.offset,  //页码
                departmentname: $("#txt_search_departmentname").val(),
                statu: $("#txt_search_statu").val()
            };
            return temp;
        };
        return oTableInit;
    };


    var ButtonInit = function () {
        var oInit = new Object();
        var postdata = {};

        oInit.Init = function () {
            //初始化页面上面的按钮事件
        };

        return oInit;
    };

    $(document).ready(function () {
        
        $(".submitcss").click(function () {
            $.ajax({
                type: "POST",//请求方式
                url: 'Index/Index',
                dataType: "json",
                data: {
                    "BtnSubmit": $(".submitcss").val(),
                },
                success: function (data) {
                    $('#tb_departments').bootstrapTable('refresh');

                }
            });
        });
    });
</script>